[package]
name = "codanna"
version = "0.5.25"
authors = ["Angel Bartolli <bartolli@gmail.com>"]
edition = "2024"
description = "Code Intelligence for Large Language Models"
documentation = "https://docs.rs/codanna"
homepage = "https://github.com/bartolli/codanna"
repository = "https://github.com/bartolli/codanna"
license = "Apache-2.0"
readme = "README.md"
keywords = ["mcp-server", "context-engineering", "agentic-coding", "code-embedding", "ai-ide"]
categories = ["development-tools", "command-line-utilities", "parsing", "text-processing", "compilers"]
autoexamples = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[dependencies]
anyhow = "1.0.98"
bitflags = "2.6"
clap = { version = "4.5.41", features = ["derive", "color", "env"] }
crossbeam-channel = "0.5.15"
dashmap = "6.1.0"
dirs = "6.0.0"
figment = { version = "0.10.19", features = ["toml", "env"] }
hnsw = "0.11.0"
ignore = "0.4.23"
lz4_flex = "0.11.5"
memmap2 = "0.9.7"
notify = "8.2.0"
num_cpus = "1.17.0"
parking_lot = "0.12.4"
rayon = "1.10.0"
rkyv = { version = "0.8.10", features = ["bytecheck", "std"] }
rmcp = { version = "0.8.0", features = ["server", "client", "transport-io", "transport-child-process", "transport-streamable-http-server", "transport-sse-server", "transport-worker"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.141"
sha2 = "0.10"
tantivy = "0.25.0"
thiserror = "2.0.12"
tokio = { version = "1.46.1", features = ["full"] }
toml = { version = "0.9.2", features = ["preserve_order"] }
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
tree-sitter = "0.25.8"
tree-sitter-go = "0.25.0" # Upgraded to ABI-15
tree-sitter-java = "0.23.5"
tree-sitter-javascript = "0.25.0"
tree-sitter-php = "0.24.1"
tree-sitter-python = "0.25.0"
tree-sitter-rust = "0.24.0"
tree-sitter-typescript = "0.23.2"
walkdir = "2.5.0"
bincode = "2.0.1"
fastembed = "5.2.0"
rand = "0.9.2"
indicatif = "0.18.0"
comfy-table = "7.1.4"
console = "0.16.0"
owo-colors = "4.2.2"
axum = { version = "0.8.4", optional = true }
tower = { version = "0.5.2", optional = true }
tower-http = { version = "0.6.6", features = ["cors"], optional = true }
serde_urlencoded = "0.7"
tokio-util = "0.7.16"
axum-server = { version = "0.7.2", features = ["tls-rustls-no-provider"], optional = true }
rustls = { version = "0.23.31", default-features = false, features = ["ring"], optional = true }
rcgen = { version = "0.14.3", optional = true }
is-terminal = "0.4"
json5 = "0.4.1"
regex = "1.11.2"
tree-sitter-c = "0.24.1"
tree-sitter-c-sharp = "0.23.1"
tree-sitter-cpp = "0.23.4"
chrono = "0.4.42"

[dev-dependencies]
criterion = { version = "0.7.0", features = ["html_reports"] }
tempfile = "3.20.0"
testcontainers = "0.15"

[features]
default = []
http-server = ["axum", "tower", "tower-http"]
https-server = ["http-server", "axum-server", "rustls", "rcgen"]
axum = ["dep:axum"]
tower = ["dep:tower"]
tower-http = ["dep:tower-http"]
axum-server = ["dep:axum-server"]
rustls = ["dep:rustls"]
rcgen = ["dep:rcgen"]

[lints.clippy]
# Minimal lints - main enforcement via CI with `cargo clippy -- -D warnings`
# See clippy.toml for behavior configuration (thresholds, etc.)
uninlined_format_args = "warn"

[[example]]
name = "simple_progress_demo"
path = "examples/simple_progress_demo.rs"

[[bench]]
name = "unified_output_bench"
harness = false
